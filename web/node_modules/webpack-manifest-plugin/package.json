{
  "_args": [
    [
      {
        "raw": "webpack-manifest-plugin@1.1.0",
        "scope": null,
        "escapedName": "webpack-manifest-plugin",
        "name": "webpack-manifest-plugin",
        "rawSpec": "1.1.0",
        "spec": "1.1.0",
        "type": "version"
      },
      "/home/ryu/Projects/sket.io/web/node_modules/react-scripts"
    ]
  ],
  "_from": "webpack-manifest-plugin@1.1.0",
  "_id": "webpack-manifest-plugin@1.1.0",
  "_inCache": true,
  "_location": "/webpack-manifest-plugin",
  "_nodeVersion": "6.3.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/webpack-manifest-plugin-1.1.0.tgz_1476891411337_0.4521902452688664"
  },
  "_npmUser": {
    "name": "danethurber",
    "email": "dane.thurber@gmail.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "webpack-manifest-plugin@1.1.0",
    "scope": null,
    "escapedName": "webpack-manifest-plugin",
    "name": "webpack-manifest-plugin",
    "rawSpec": "1.1.0",
    "spec": "1.1.0",
    "type": "version"
  },
  "_requiredBy": [
    "/react-scripts"
  ],
  "_resolved": "https://registry.npmjs.org/webpack-manifest-plugin/-/webpack-manifest-plugin-1.1.0.tgz",
  "_shasum": "6b6c718aade8a2537995784b46bd2e9836057caa",
  "_shrinkwrap": null,
  "_spec": "webpack-manifest-plugin@1.1.0",
  "_where": "/home/ryu/Projects/sket.io/web/node_modules/react-scripts",
  "author": {
    "name": "Dane Thurber",
    "email": "dane.thurber@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/danethurber/webpack-manifest-plugin/issues"
  },
  "dependencies": {
    "fs-extra": "^0.30.0",
    "lodash": ">=3.5 <5"
  },
  "description": "webpack plugin for generating asset manifests",
  "devDependencies": {
    "css-loader": "^0.9.1",
    "extract-text-webpack-plugin": "^0.5.0",
    "jasmine": "^2.2.1",
    "memory-fs": "^0.2.0",
    "style-loader": "^0.8.3",
    "webpack": "^1.7.3"
  },
  "directories": {},
  "dist": {
    "shasum": "6b6c718aade8a2537995784b46bd2e9836057caa",
    "tarball": "https://registry.npmjs.org/webpack-manifest-plugin/-/webpack-manifest-plugin-1.1.0.tgz"
  },
  "gitHead": "f33a0ad48e29b41f545bcdaa03bf6c2a331cd6e0",
  "homepage": "https://github.com/danethurber/webpack-manifest-plugin",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "danethurber",
      "email": "dane.thurber@gmail.com"
    }
  ],
  "name": "webpack-manifest-plugin",
  "optionalDependencies": {},
  "readme": "# Webpack Manifest Plugin\n\nWebpack plugin for generating an asset manifest.\n\n[![Circle CI](https://circleci.com/gh/danethurber/webpack-manifest-plugin.svg?style=shield)](https://circleci.com/gh/danethurber/webpack-manifest-plugin)\n\n\n## Usage\n\nIn your `webpack.config.js`\n\n```javascript\nvar ManifestPlugin = require('webpack-manifest-plugin');\n\nmodule.exports = {\n    // ...\n    plugins: [\n      new ManifestPlugin()\n    ]\n};\n```\n\nThis will generate a `manifest.json` file in your root output directory with a mapping of all source file names to their corresponding output file, for example:\n\n```json\n{\n  \"mods/alpha.js\": \"mods/alpha.1234567890.js\",\n  \"mods/omega.js\": \"mods/omega.0987654321.js\"\n}\n```\n\n\n## Configuration\n\nA manifest is configurable using constructor options:\n\n```javascript\nnew ManifestPlugin({\n  fileName: 'my-manifest.json',\n  basePath: '/app/'\n})\n```\n\n**Options:**\n\n* `fileName`: The manifest filename in your output directory (`manifest.json` by default).\n* `basePath`: A path prefix for all file references. Useful for including your output path in the manifest.\n* `publicPath`: A path prefix used only on output files, similar to Webpack's  [output.publicPath](https://github.com/webpack/docs/wiki/configuration#outputpublicpath). Ignored if `basePath` was also provided.\n* `stripSrc`: removes unwanted strings from source filenames\n* `writeToFileEmit`: If set to `true` will emit to build folder and memory in combination with `webpack-dev-server`   \n* `cache`: In [multi-compiler mode](https://github.com/webpack/webpack/tree/master/examples/multi-compiler) webpack will overwrite the manifest on each compilation. Passing a shared `{}` as the `cache` option into each compilation's ManifestPlugin will combine the manifest between compilations.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/danethurber/webpack-manifest-plugin.git"
  },
  "scripts": {
    "test": "jasmine"
  },
  "version": "1.1.0"
}
