{
  "_args": [
    [
      {
        "raw": "html-webpack-plugin@2.24.0",
        "scope": null,
        "escapedName": "html-webpack-plugin",
        "name": "html-webpack-plugin",
        "rawSpec": "2.24.0",
        "spec": "2.24.0",
        "type": "version"
      },
      "/home/ryu/Projects/sket.io/web/node_modules/react-scripts"
    ]
  ],
  "_from": "html-webpack-plugin@2.24.0",
  "_id": "html-webpack-plugin@2.24.0",
  "_inCache": true,
  "_location": "/html-webpack-plugin",
  "_nodeVersion": "4.4.4",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/html-webpack-plugin-2.24.0.tgz_1477037817668_0.509069389430806"
  },
  "_npmUser": {
    "name": "jantimon",
    "email": "j.nicklas@me.com"
  },
  "_npmVersion": "3.10.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "html-webpack-plugin@2.24.0",
    "scope": null,
    "escapedName": "html-webpack-plugin",
    "name": "html-webpack-plugin",
    "rawSpec": "2.24.0",
    "spec": "2.24.0",
    "type": "version"
  },
  "_requiredBy": [
    "/react-scripts"
  ],
  "_resolved": "https://registry.npmjs.org/html-webpack-plugin/-/html-webpack-plugin-2.24.0.tgz",
  "_shasum": "53697cea79a9f3cd1f8c239ac71f949d5673cacb",
  "_shrinkwrap": null,
  "_spec": "html-webpack-plugin@2.24.0",
  "_where": "/home/ryu/Projects/sket.io/web/node_modules/react-scripts",
  "author": {
    "name": "Charles Blaxland",
    "email": "charles.blaxland@gmail.com",
    "url": "https://github.com/ampedandwired"
  },
  "bugs": {
    "url": "https://github.com/ampedandwired/html-webpack-plugin/issues"
  },
  "dependencies": {
    "bluebird": "^3.4.6",
    "html-minifier": "^3.1.0",
    "loader-utils": "^0.2.16",
    "lodash": "^4.16.4",
    "pretty-error": "^2.0.2",
    "toposort": "^1.0.0"
  },
  "description": "Simplifies creation of HTML files to serve your webpack bundles",
  "devDependencies": {
    "appcache-webpack-plugin": "^1.3.0",
    "css-loader": "^0.25.0",
    "dir-compare": "1.2.0",
    "es6-promise": "^4.0.5",
    "extract-text-webpack-plugin": "^1.0.1",
    "file-loader": "^0.9.0",
    "html-loader": "^0.4.4",
    "jade": "^1.11.0",
    "jade-loader": "^0.8.0",
    "jasmine": "^2.5.2",
    "rimraf": "^2.5.4",
    "semistandard": "8.0.0",
    "style-loader": "^0.13.1",
    "underscore-template-loader": "^0.7.3",
    "url-loader": "^0.5.7",
    "webpack": "^1.13.2",
    "webpack-recompilation-simulator": "^1.3.0"
  },
  "directories": {},
  "dist": {
    "shasum": "53697cea79a9f3cd1f8c239ac71f949d5673cacb",
    "tarball": "https://registry.npmjs.org/html-webpack-plugin/-/html-webpack-plugin-2.24.0.tgz"
  },
  "files": [
    "index.js",
    "default_index.ejs",
    "lib/"
  ],
  "gitHead": "1a2e2b3e94bc62569ee7b748da88b1b85f2f79c2",
  "homepage": "https://github.com/ampedandwired/html-webpack-plugin",
  "keywords": [
    "webpack",
    "plugin",
    "html",
    "html-webpack-plugin"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "ampedandwired",
      "email": "charles.blaxland@gmail.com"
    },
    {
      "name": "jantimon",
      "email": "j.nicklas@me.com"
    }
  ],
  "name": "html-webpack-plugin",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "1 || ^2.1.0-beta"
  },
  "readme": "HTML Webpack Plugin\n===================\n[![npm version](https://badge.fury.io/js/html-webpack-plugin.svg)](http://badge.fury.io/js/html-webpack-plugin) [![Dependency Status](https://david-dm.org/ampedandwired/html-webpack-plugin.svg)](https://david-dm.org/ampedandwired/html-webpack-plugin) [![Build status](https://travis-ci.org/ampedandwired/html-webpack-plugin.svg)](https://travis-ci.org/ampedandwired/html-webpack-plugin) [![Windows build status](https://ci.appveyor.com/api/projects/status/github/ampedandwired/html-webpack-plugin?svg=true&branch=master)](https://ci.appveyor.com/project/jantimon/html-webpack-plugin) [![js-semistandard-style](https://img.shields.io/badge/code%20style-semistandard-brightgreen.svg?style=flat-square)](https://github.com/Flet/semistandard) [![bitHound Dependencies](https://www.bithound.io/github/ampedandwired/html-webpack-plugin/badges/dependencies.svg)](https://www.bithound.io/github/ampedandwired/html-webpack-plugin/master/dependencies/npm) [![license](https://img.shields.io/github/license/mashape/apistatus.svg?maxAge=2592000)]()\n\n[![NPM](https://nodei.co/npm/html-webpack-plugin.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/html-webpack-plugin/)\n\nThis is a [webpack](http://webpack.github.io/) plugin that simplifies creation of HTML files to serve your\nwebpack bundles. This is especially useful for webpack bundles that include\na hash in the filename which changes every compilation. You can either let the plugin generate an HTML file for you, supply\nyour own template using lodash templates or use your own loader.\n\nMaintainer: Jan Nicklas [@jantimon](https://twitter.com/jantimon)\n\nInstallation\n------------\nInstall the plugin with npm:\n```shell\n$ npm install html-webpack-plugin --save-dev\n```\n\nMigration guide from 1.x\n------------------------\n\n[Changelog](https://github.com/ampedandwired/html-webpack-plugin/blob/master/CHANGELOG.md)\n\nIf you used the 1.x version please take a look at the [migration guide](https://github.com/ampedandwired/html-webpack-plugin/blob/master/migration.md)\n\n\nBasic Usage\n-----------\n\nThe plugin will generate an HTML5 file for you that includes all your webpack\nbundles in the body using `script` tags. Just add the plugin to your webpack\nconfig as follows:\n\n```javascript\nvar HtmlWebpackPlugin = require('html-webpack-plugin');\nvar webpackConfig = {\n  entry: 'index.js',\n  output: {\n    path: 'dist',\n    filename: 'index_bundle.js'\n  },\n  plugins: [new HtmlWebpackPlugin()]\n};\n```\n\nThis will generate a file `dist/index.html` containing the following:\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>Webpack App</title>\n  </head>\n  <body>\n    <script src=\"index_bundle.js\"></script>\n  </body>\n</html>\n```\n\nIf you have multiple webpack entry points, they will all be included with `script`\ntags in the generated HTML.\n\nIf you have any CSS assets in webpack's output (for example, CSS extracted\nwith the [ExtractTextPlugin](https://github.com/webpack/extract-text-webpack-plugin))\nthen these will be included with `<link>` tags in the HTML head.\n\nConfiguration\n-------------\nYou can pass a hash of configuration options to `HtmlWebpackPlugin`.\nAllowed values are as follows:\n\n- `title`: The title to use for the generated HTML document.\n- `filename`: The file to write the HTML to. Defaults to `index.html`.\n   You can specify a subdirectory here too (eg: `assets/admin.html`).\n- `template`: Webpack require path to the template. Please see the [docs](https://github.com/ampedandwired/html-webpack-plugin/blob/master/docs/template-option.md) for details. \n- `inject`: `true | 'head' | 'body' | false` Inject all assets into the given `template` or `templateContent` - When passing `true` or `'body'` all javascript resources will be placed at the bottom of the body element. `'head'` will place the scripts in the head element.\n- `favicon`: Adds the given favicon path to the output html.\n- `minify`: `{...} | false` Pass a [html-minifier](https://github.com/kangax/html-minifier#options-quick-reference) options object to minify the output.\n- `hash`: `true | false` if `true` then append a unique webpack compilation hash to all\n  included scripts and CSS files. This is useful for cache busting.\n- `cache`: `true | false` if `true` (default) try to emit the file only if it was changed.\n- `showErrors`: `true | false` if `true` (default) errors details will be written into the html page.\n- `chunks`: Allows you to add only some chunks (e.g. only the unit-test chunk)\n- `chunksSortMode`: Allows to control how chunks should be sorted before they are included to the html. Allowed values: 'none' | 'auto' | 'dependency' | {function} - default: 'auto'\n- `excludeChunks`: Allows you to skip some chunks (e.g. don't add the unit-test chunk)\n- `xhtml`: `true | false` If `true` render the `link` tags as self-closing, XHTML compliant. Default is `false`\n\nHere's an example webpack config illustrating how to use these options:\n```javascript\n{\n  entry: 'index.js',\n  output: {\n    path: 'dist',\n    filename: 'index_bundle.js'\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      title: 'My App',\n      filename: 'assets/admin.html'\n    })\n  ]\n}\n```\n\nFAQ\n----\n\n* [Why is my html minified?](https://github.com/ampedandwired/html-webpack-plugin/blob/master/docs/template-option.md)\n* [Why is my `<% ... %>` template not working?](https://github.com/ampedandwired/html-webpack-plugin/blob/master/docs/template-option.md)\n* [How can I use handlebars/pug/ejs as template engine](https://github.com/ampedandwired/html-webpack-plugin/blob/master/docs/template-option.md)\n\nGenerating Multiple HTML Files\n------------------------------\nTo generate more than one HTML file, declare the plugin more than\nonce in your plugins array:\n```javascript\n{\n  entry: 'index.js',\n  output: {\n    path: 'dist',\n    filename: 'index_bundle.js'\n  },\n  plugins: [\n    new HtmlWebpackPlugin(), // Generates default index.html\n    new HtmlWebpackPlugin({  // Also generate a test.html\n      filename: 'test.html',\n      template: 'src/assets/test.html'\n    })\n  ]\n}\n```\n\nWriting Your Own Templates\n--------------------------\nIf the default generated HTML doesn't meet your needs you can supply\nyour own template. The easiest way is to use the `template` option and pass a custom html file.\nThe html-webpack-plugin will automatically inject all necessary CSS, JS, manifest\nand favicon files into the markup.\n\n```javascript\nplugins: [\n  new HtmlWebpackPlugin({\n    title: 'Custom template',\n    template: 'my-index.ejs', // Load a custom template (ejs by default see the FAQ for details)\n  })\n]\n```\n\n`my-index.ejs`:\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\"/>\n    <title><%= htmlWebpackPlugin.options.title %></title>\n  </head>\n  <body>\n  </body>\n</html>\n```\n\nIf you already have a template loader, you can use it to parse the template.\nPlease note that this will also happen if you specifiy the html-loader and use `.html` file as template.\n\n```javascript\nmodule: {\n  loaders: [\n    { test: /\\.hbs$/, loader: \"handlebars\" }\n  ]\n},\nplugins: [\n  new HtmlWebpackPlugin({\n    title: 'Custom template using Handlebars',\n    template: 'my-index.hbs'\n  })\n]\n```\n\nYou can use the lodash syntax out of the box.\nIf the `inject` feature doesn't fit your needs and you want full control over the asset placement use the [default template](https://github.com/jaketrent/html-webpack-template/blob/86f285d5c790a6c15263f5cc50fd666d51f974fd/index.html) of the [html-webpack-template project](https://github.com/jaketrent/html-webpack-template) as a starting point for writing your own.\n\nThe following variables are available in the template:\n- `htmlWebpackPlugin`: data specific to this plugin\n  - `htmlWebpackPlugin.files`: a massaged representation of the\n    `assetsByChunkName` attribute of webpack's [stats](https://github.com/webpack/docs/wiki/node.js-api#stats)\n    object. It contains a mapping from entry point name to the bundle filename, eg:\n    ```json\n    \"htmlWebpackPlugin\": {\n      \"files\": {\n        \"css\": [ \"main.css\" ],\n        \"js\": [ \"assets/head_bundle.js\", \"assets/main_bundle.js\"],\n        \"chunks\": {\n          \"head\": {\n            \"entry\": \"assets/head_bundle.js\",\n            \"css\": [ \"main.css\" ]\n          },\n          \"main\": {\n            \"entry\": \"assets/main_bundle.js\",\n            \"css\": []\n          },\n        }\n      }\n    }\n    ```\n    If you've set a publicPath in your webpack config this will be reflected\n    correctly in this assets hash.\n\n  - `htmlWebpackPlugin.options`: the options hash that was passed to\n     the plugin. In addition to the options actually used by this plugin,\n     you can use this hash to pass arbitrary data through to your template.\n\n- `webpack`: the webpack [stats](https://github.com/webpack/docs/wiki/node.js-api#stats)\n  object. Note that this is the stats object as it was at the time the HTML template\n  was emitted and as such may not have the full set of stats that are available\n  after the wepback run is complete.\n\n- `webpackConfig`: the webpack configuration that was used for this compilation. This\n  can be used, for example, to get the `publicPath` (`webpackConfig.output.publicPath`).\n\n\nFiltering chunks\n----------------\n\nTo include only certain chunks you can limit the chunks being used:\n\n```javascript\nplugins: [\n  new HtmlWebpackPlugin({\n    chunks: ['app']\n  })\n]\n```\n\nIt is also possible to exclude certain chunks by setting the `excludeChunks` option:\n\n```javascript\nplugins: [\n  new HtmlWebpackPlugin({\n    excludeChunks: ['dev-helper']\n  })\n]\n```\n\nEvents\n------\n\nTo allow other [plugins](https://github.com/webpack/docs/wiki/plugins) to alter the html this plugin executes the following events:\n\nAsync:\n\n * `html-webpack-plugin-before-html-generation`\n * `html-webpack-plugin-before-html-processing`\n * `html-webpack-plugin-alter-asset-tags`\n * `html-webpack-plugin-after-html-processing`\n * `html-webpack-plugin-after-emit`\n\nSync:\n\n * `html-webpack-plugin-alter-chunks`\n\nExample implementation: [html-webpack-harddisk-plugin](https://github.com/jantimon/html-webpack-harddisk-plugin)\n\nUsage:\n\n```javascript\n// MyPlugin.js\n\nfunction MyPlugin(options) {\n  // Configure your plugin with options...\n}\n\nMyPlugin.prototype.apply = function(compiler) {\n  // ...\n  compiler.plugin('compilation', function(compilation) {\n    console.log('The compiler is starting a new compilation...');\n\n    compilation.plugin('html-webpack-plugin-before-html-processing', function(htmlPluginData, callback) {\n      htmlPluginData.html += 'The magic footer';\n      callback(null, htmlPluginData);\n    });\n  });\n\n};\n\nmodule.exports = MyPlugin;\n```\nThen in `webpack.config.js`\n\n```javascript\nplugins: [\n  new MyPlugin({options: ''})\n]\n```\n\nNote that the callback must be passed the htmlPluginData in order to pass this onto any other plugins listening on the same 'html-webpack-plugin-before-html-processing' event.\n\n\n# Contribution\n\nYou're free to contribute to this project by submitting [issues](https://github.com/ampedandwired/html-webpack-plugin/issues) and/or [pull requests](https://github.com/ampedandwired/html-webpack-plugin/pulls). This project is test-driven, so keep in mind that every change and new feature should be covered by tests.\nThis project uses the [semistandard code style](https://github.com/Flet/semistandard).\n\n# License\n\nThis project is licensed under [MIT](https://github.com/ampedandwired/html-webpack-plugin/blob/master/LICENSE).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ampedandwired/html-webpack-plugin.git"
  },
  "scripts": {
    "build-examples": "node examples/build-examples.js",
    "prepublish": "npm run test",
    "pretest": "semistandard",
    "test": "jasmine"
  },
  "semistandard": {
    "ignore": [
      "examples/*/dist/**/*.*"
    ]
  },
  "version": "2.24.0"
}
